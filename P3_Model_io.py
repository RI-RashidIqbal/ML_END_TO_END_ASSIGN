# -*- coding: utf-8 -*-
"""Model_io_MLAsgn02.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13y0lLpaZe8eL49OiV1kiS3trygBZxziH
"""



"""# Part 3: Model Saving and Loading

Objective: Save the trained model to a file and load it back.

# Steps:
- Use joblib or a similar library to save the trained model to a file.
- Write a function to load the model from the file.
"""

import pandas
from sklearn import model_selection
from sklearn.model_selection import train_test_split
# from sklearn.linear_model import LogisticRegression
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score
from sklearn.pipeline import make_pipeline
import joblib
import matplotlib.pyplot as plt
import pickle

from google.colab import drive
drive.mount('/content/drive')

url = "/content/drive/MyDrive/DS/ENDTOEND_ML02ASSIGNMENT/house_prices_data.csv"
names = ['square_footage', 'num_bedrooms', 'house_age','House_Price']
dataframe = pandas.read_csv(url, names=names,skiprows=1)
array = dataframe.values

dataframe.head()

len(dataframe)

X = dataframe[['square_footage', 'num_bedrooms', 'house_age']]
y = dataframe['House_Price']
test_size = 0.2
seed = 7

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=seed)
# Fit the model on training set
model = LinearRegression()
model.fit(X_train, y_train)

result = model.score(X_test, y_test)
print(result)

y_pred = model.predict(X_test)
plt.scatter(y_test, y_pred)
plt.xlabel('Actual House Prices')
plt.ylabel('Predicted House Prices')
plt.title('Actual vs Predicted House Prices')
plt.show()

print(X_test)

print(model.predict(X_test))

joblib.dump(model, '/content/drive/MyDrive/DS/ENDTOEND_ML02ASSIGNMENT/houserent_model.pkl')

loaded_model = joblib.load('/content/drive/MyDrive/DS/ENDTOEND_ML02ASSIGNMENT/houserent_model.pkl')

print(loaded_model.predict(X_test))

result = loaded_model.score(X_test, y_test)
print(result)

def load_model(filename):
    """
    Load a model from a file using pickle.
    Parameters:
    filename (str): The path to the file containing the model.
    Returns:
    model: The loaded model object.
    """
    with open(filename, 'rb') as file:
        model = pickle.load(file)
    return model

# Load a model from 'model.pkl'
model = load_model('/content/drive/MyDrive/DS/ENDTOEND_ML02ASSIGNMENT/houserent_model.pkl')