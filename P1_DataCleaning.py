# -*- coding: utf-8 -*-
"""DataCleaning_MLAsgn02.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1HeaMqpqVdCReHr-oifycl4SPGPC_i49z

# End-to-End ML Assignment:
# Building a Machine Learning Pipeline (by Rashid Iqbal)

# Assignment Overview

In this assignment, we will build a complete Machine Learning pipeline from data cleaning to
deployment. The assignment is divided into five main parts:

1. Data Cleaning
2. Model Building
3. Model Saving and Loading
4. FastAPI Endpoint for the Model
5. Deployment at Hugging Face with a Simple UI using Gradio or Streamlit
Dataset
You

# Part 1: Data Cleaning

Objective: Load and clean the dataset.

# Steps:
- Load the dataset using pandas.
- Handle missing values if any.
- Encode categorical variables if any.
- Normalize or standardize the data if necessary.

# Import the Require Libraries
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score
from sklearn.pipeline import make_pipeline
from sklearn import model_selection
import joblib

from google.colab import drive
drive.mount('/content/drive')

# Step 1: Load the Data

file_path = '/content/drive/MyDrive/DS/ENDTOEND_ML02ASSIGNMENT/house_prices_data.csv'
data = pd.read_csv(file_path)

# Step 2: Explore the Data, Display the first few rows of the dataset
print(data.info)

# Step 2: Explore the Data, Display the first few rows of the dataset
print(data.head())

# Check for any missing values
print(data.isnull().sum())

# Get the basic statistics of the features and target variable
print(data.describe())

# Step 3: Visualize the Data through Charts
# Show the pairwise relationships between all variables
sns.pairplot(data)
plt.show()

# Display the distribution of house prices
sns.histplot(data['House_Price'], kde=True)
plt.title('Distribution of House Prices')
plt.show()

# Show the relationship between square footage and house price
sns.scatterplot(x='Square_Footage', y='House_Price', data=data)
plt.title('Square Footage vs. House Price')
plt.show()

# Show the distribution of house prices for different numbers of bedrooms
sns.boxplot(x='Num_Bedrooms', y='House_Price', data=data)
plt.title('Number of Bedrooms vs. House Price')
plt.show()

# Scatter Plot (House Age vs. House Price)
sns.scatterplot(x='House_Age', y='House_Price', data=data)
plt.title('House Age vs. House Price')
plt.show()

# Correlation Heatmap, Display the correlation coefficients between features
correlation_matrix = data.corr()
sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm')
plt.title('Correlation Heatmap')
plt.show()

